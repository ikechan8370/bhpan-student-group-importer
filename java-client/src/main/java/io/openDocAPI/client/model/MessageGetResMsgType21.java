/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.openDocAPI.client.model.MessageGetResMsgBase;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * MessageGetResMsgType21
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class MessageGetResMsgType21 extends MessageGetResMsgBase {
  @SerializedName("creator")
  private String creator = null;

  @SerializedName("modifier")
  private String modifier = null;

  @SerializedName("quarantinetype")
  private Long quarantinetype = null;

  @SerializedName("processtype")
  private Long processtype = null;

  public MessageGetResMsgType21 creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * 创建者
   * @return creator
  **/
  @Schema(required = true, description = "创建者")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public MessageGetResMsgType21 modifier(String modifier) {
    this.modifier = modifier;
    return this;
  }

   /**
   * 修改者
   * @return modifier
  **/
  @Schema(required = true, description = "修改者")
  public String getModifier() {
    return modifier;
  }

  public void setModifier(String modifier) {
    this.modifier = modifier;
  }

  public MessageGetResMsgType21 quarantinetype(Long quarantinetype) {
    this.quarantinetype = quarantinetype;
    return this;
  }

   /**
   * 被隔离类型：1：非法 2：染毒 3：涉黄
   * @return quarantinetype
  **/
  @Schema(required = true, description = "被隔离类型：1：非法 2：染毒 3：涉黄")
  public Long getQuarantinetype() {
    return quarantinetype;
  }

  public void setQuarantinetype(Long quarantinetype) {
    this.quarantinetype = quarantinetype;
  }

  public MessageGetResMsgType21 processtype(Long processtype) {
    this.processtype = processtype;
    return this;
  }

   /**
   * 处理类型：0：隔离 1：修复（还原消息无需使用）
   * @return processtype
  **/
  @Schema(required = true, description = "处理类型：0：隔离 1：修复（还原消息无需使用）")
  public Long getProcesstype() {
    return processtype;
  }

  public void setProcesstype(Long processtype) {
    this.processtype = processtype;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageGetResMsgType21 messageGetResMsgType21 = (MessageGetResMsgType21) o;
    return Objects.equals(this.creator, messageGetResMsgType21.creator) &&
        Objects.equals(this.modifier, messageGetResMsgType21.modifier) &&
        Objects.equals(this.quarantinetype, messageGetResMsgType21.quarantinetype) &&
        Objects.equals(this.processtype, messageGetResMsgType21.processtype) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creator, modifier, quarantinetype, processtype, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageGetResMsgType21 {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    modifier: ").append(toIndentedString(modifier)).append("\n");
    sb.append("    quarantinetype: ").append(toIndentedString(quarantinetype)).append("\n");
    sb.append("    processtype: ").append(toIndentedString(processtype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
