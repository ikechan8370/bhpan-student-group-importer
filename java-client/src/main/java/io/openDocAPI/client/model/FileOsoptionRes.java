/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * FileOsoptionRes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class FileOsoptionRes {
  @SerializedName("partminsize")
  private Long partminsize = null;

  @SerializedName("partmaxsize")
  private Long partmaxsize = null;

  @SerializedName("partmaxnum")
  private Long partmaxnum = null;

  public FileOsoptionRes partminsize(Long partminsize) {
    this.partminsize = partminsize;
    return this;
  }

   /**
   * 大文件分片上传，除最后一块外，其它分片的最小值；当partminsize小于等于4M时，可按照4M分块；当partminsize大于4M时，分块的大小必须大于等于partminsize。
   * @return partminsize
  **/
  @Schema(required = true, description = "大文件分片上传，除最后一块外，其它分片的最小值；当partminsize小于等于4M时，可按照4M分块；当partminsize大于4M时，分块的大小必须大于等于partminsize。")
  public Long getPartminsize() {
    return partminsize;
  }

  public void setPartminsize(Long partminsize) {
    this.partminsize = partminsize;
  }

  public FileOsoptionRes partmaxsize(Long partmaxsize) {
    this.partmaxsize = partmaxsize;
    return this;
  }

   /**
   * 大文件分片上传，除最后一块外，其它分片的最大值
   * @return partmaxsize
  **/
  @Schema(required = true, description = "大文件分片上传，除最后一块外，其它分片的最大值")
  public Long getPartmaxsize() {
    return partmaxsize;
  }

  public void setPartmaxsize(Long partmaxsize) {
    this.partmaxsize = partmaxsize;
  }

  public FileOsoptionRes partmaxnum(Long partmaxnum) {
    this.partmaxnum = partmaxnum;
    return this;
  }

   /**
   * 大文件分片上传，最大的分片数量
   * @return partmaxnum
  **/
  @Schema(required = true, description = "大文件分片上传，最大的分片数量")
  public Long getPartmaxnum() {
    return partmaxnum;
  }

  public void setPartmaxnum(Long partmaxnum) {
    this.partmaxnum = partmaxnum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileOsoptionRes fileOsoptionRes = (FileOsoptionRes) o;
    return Objects.equals(this.partminsize, fileOsoptionRes.partminsize) &&
        Objects.equals(this.partmaxsize, fileOsoptionRes.partmaxsize) &&
        Objects.equals(this.partmaxnum, fileOsoptionRes.partmaxnum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partminsize, partmaxsize, partmaxnum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileOsoptionRes {\n");
    
    sb.append("    partminsize: ").append(toIndentedString(partminsize)).append("\n");
    sb.append("    partmaxsize: ").append(toIndentedString(partmaxsize)).append("\n");
    sb.append("    partmaxnum: ").append(toIndentedString(partmaxnum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
