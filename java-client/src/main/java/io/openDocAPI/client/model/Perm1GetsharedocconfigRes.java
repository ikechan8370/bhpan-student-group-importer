/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Perm1GetsharedocconfigRes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class Perm1GetsharedocconfigRes {
  @SerializedName("enable_user_doc_inner_link_share")
  private Boolean enableUserDocInnerLinkShare = null;

  @SerializedName("enable_user_doc_out_link_share")
  private Boolean enableUserDocOutLinkShare = null;

  @SerializedName("enable_group_doc_out_link_share")
  private Boolean enableGroupDocOutLinkShare = null;

  @SerializedName("enable_group_doc_inner_link_share")
  private Boolean enableGroupDocInnerLinkShare = null;

  public Perm1GetsharedocconfigRes enableUserDocInnerLinkShare(Boolean enableUserDocInnerLinkShare) {
    this.enableUserDocInnerLinkShare = enableUserDocInnerLinkShare;
    return this;
  }

   /**
   * 开启个人文档内链共享
   * @return enableUserDocInnerLinkShare
  **/
  @Schema(required = true, description = "开启个人文档内链共享")
  public Boolean isEnableUserDocInnerLinkShare() {
    return enableUserDocInnerLinkShare;
  }

  public void setEnableUserDocInnerLinkShare(Boolean enableUserDocInnerLinkShare) {
    this.enableUserDocInnerLinkShare = enableUserDocInnerLinkShare;
  }

  public Perm1GetsharedocconfigRes enableUserDocOutLinkShare(Boolean enableUserDocOutLinkShare) {
    this.enableUserDocOutLinkShare = enableUserDocOutLinkShare;
    return this;
  }

   /**
   * 开启个人文档外链共享
   * @return enableUserDocOutLinkShare
  **/
  @Schema(required = true, description = "开启个人文档外链共享")
  public Boolean isEnableUserDocOutLinkShare() {
    return enableUserDocOutLinkShare;
  }

  public void setEnableUserDocOutLinkShare(Boolean enableUserDocOutLinkShare) {
    this.enableUserDocOutLinkShare = enableUserDocOutLinkShare;
  }

  public Perm1GetsharedocconfigRes enableGroupDocOutLinkShare(Boolean enableGroupDocOutLinkShare) {
    this.enableGroupDocOutLinkShare = enableGroupDocOutLinkShare;
    return this;
  }

   /**
   * 开启群组文档外链共享
   * @return enableGroupDocOutLinkShare
  **/
  @Schema(required = true, description = "开启群组文档外链共享")
  public Boolean isEnableGroupDocOutLinkShare() {
    return enableGroupDocOutLinkShare;
  }

  public void setEnableGroupDocOutLinkShare(Boolean enableGroupDocOutLinkShare) {
    this.enableGroupDocOutLinkShare = enableGroupDocOutLinkShare;
  }

  public Perm1GetsharedocconfigRes enableGroupDocInnerLinkShare(Boolean enableGroupDocInnerLinkShare) {
    this.enableGroupDocInnerLinkShare = enableGroupDocInnerLinkShare;
    return this;
  }

   /**
   * 开启群组文档内链共享
   * @return enableGroupDocInnerLinkShare
  **/
  @Schema(required = true, description = "开启群组文档内链共享")
  public Boolean isEnableGroupDocInnerLinkShare() {
    return enableGroupDocInnerLinkShare;
  }

  public void setEnableGroupDocInnerLinkShare(Boolean enableGroupDocInnerLinkShare) {
    this.enableGroupDocInnerLinkShare = enableGroupDocInnerLinkShare;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Perm1GetsharedocconfigRes perm1GetsharedocconfigRes = (Perm1GetsharedocconfigRes) o;
    return Objects.equals(this.enableUserDocInnerLinkShare, perm1GetsharedocconfigRes.enableUserDocInnerLinkShare) &&
        Objects.equals(this.enableUserDocOutLinkShare, perm1GetsharedocconfigRes.enableUserDocOutLinkShare) &&
        Objects.equals(this.enableGroupDocOutLinkShare, perm1GetsharedocconfigRes.enableGroupDocOutLinkShare) &&
        Objects.equals(this.enableGroupDocInnerLinkShare, perm1GetsharedocconfigRes.enableGroupDocInnerLinkShare);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableUserDocInnerLinkShare, enableUserDocOutLinkShare, enableGroupDocOutLinkShare, enableGroupDocInnerLinkShare);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Perm1GetsharedocconfigRes {\n");
    
    sb.append("    enableUserDocInnerLinkShare: ").append(toIndentedString(enableUserDocInnerLinkShare)).append("\n");
    sb.append("    enableUserDocOutLinkShare: ").append(toIndentedString(enableUserDocOutLinkShare)).append("\n");
    sb.append("    enableGroupDocOutLinkShare: ").append(toIndentedString(enableGroupDocOutLinkShare)).append("\n");
    sb.append("    enableGroupDocInnerLinkShare: ").append(toIndentedString(enableGroupDocInnerLinkShare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
