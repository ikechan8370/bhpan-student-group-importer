/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.openDocAPI.client.model.AuditPublishdocReqRecipient;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AuditPublishdocReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class AuditPublishdocReq {
  @SerializedName("processid")
  private String processid = null;

  @SerializedName("docid")
  private String docid = null;

  @SerializedName("applymsg")
  private String applymsg = null;

  @SerializedName("recipients")
  private List<AuditPublishdocReqRecipient> recipients = null;

  @SerializedName("dstdocname")
  private String dstdocname = null;

  public AuditPublishdocReq processid(String processid) {
    this.processid = processid;
    return this;
  }

   /**
   * 流程id
   * @return processid
  **/
  @Schema(required = true, description = "流程id")
  public String getProcessid() {
    return processid;
  }

  public void setProcessid(String processid) {
    this.processid = processid;
  }

  public AuditPublishdocReq docid(String docid) {
    this.docid = docid;
    return this;
  }

   /**
   * 文档gns路径
   * @return docid
  **/
  @Schema(required = true, description = "文档gns路径")
  public String getDocid() {
    return docid;
  }

  public void setDocid(String docid) {
    this.docid = docid;
  }

  public AuditPublishdocReq applymsg(String applymsg) {
    this.applymsg = applymsg;
    return this;
  }

   /**
   * 发起流程时的理由
   * @return applymsg
  **/
  @Schema(required = true, description = "发起流程时的理由")
  public String getApplymsg() {
    return applymsg;
  }

  public void setApplymsg(String applymsg) {
    this.applymsg = applymsg;
  }

  public AuditPublishdocReq recipients(List<AuditPublishdocReqRecipient> recipients) {
    this.recipients = recipients;
    return this;
  }

  public AuditPublishdocReq addRecipientsItem(AuditPublishdocReqRecipient recipientsItem) {
    if (this.recipients == null) {
      this.recipients = new ArrayList<AuditPublishdocReqRecipient>();
    }
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * 内外网数据交换目的位置
   * @return recipients
  **/
  @Schema(description = "内外网数据交换目的位置")
  public List<AuditPublishdocReqRecipient> getRecipients() {
    return recipients;
  }

  public void setRecipients(List<AuditPublishdocReqRecipient> recipients) {
    this.recipients = recipients;
  }

  public AuditPublishdocReq dstdocname(String dstdocname) {
    this.dstdocname = dstdocname;
    return this;
  }

   /**
   * 内外网数据交换文档接收位置
   * @return dstdocname
  **/
  @Schema(description = "内外网数据交换文档接收位置")
  public String getDstdocname() {
    return dstdocname;
  }

  public void setDstdocname(String dstdocname) {
    this.dstdocname = dstdocname;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditPublishdocReq auditPublishdocReq = (AuditPublishdocReq) o;
    return Objects.equals(this.processid, auditPublishdocReq.processid) &&
        Objects.equals(this.docid, auditPublishdocReq.docid) &&
        Objects.equals(this.applymsg, auditPublishdocReq.applymsg) &&
        Objects.equals(this.recipients, auditPublishdocReq.recipients) &&
        Objects.equals(this.dstdocname, auditPublishdocReq.dstdocname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processid, docid, applymsg, recipients, dstdocname);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditPublishdocReq {\n");
    
    sb.append("    processid: ").append(toIndentedString(processid)).append("\n");
    sb.append("    docid: ").append(toIndentedString(docid)).append("\n");
    sb.append("    applymsg: ").append(toIndentedString(applymsg)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    dstdocname: ").append(toIndentedString(dstdocname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
