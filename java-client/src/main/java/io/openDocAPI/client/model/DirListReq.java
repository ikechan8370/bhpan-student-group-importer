/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DirListReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class DirListReq {
  @SerializedName("docid")
  private String docid = null;

  @SerializedName("by")
  private String by = null;

  @SerializedName("sort")
  private String sort = null;

  @SerializedName("attr")
  private Boolean attr = null;

  public DirListReq docid(String docid) {
    this.docid = docid;
    return this;
  }

   /**
   * 要浏览的目录的gns路径
   * @return docid
  **/
  @Schema(required = true, description = "要浏览的目录的gns路径")
  public String getDocid() {
    return docid;
  }

  public void setDocid(String docid) {
    this.docid = docid;
  }

  public DirListReq by(String by) {
    this.by = by;
    return this;
  }

   /**
   * 指定按哪个字段排序    若不指定，默认按docid升序排序    说明：  - name，按文件名称（中文按拼音）排序  - size，按大小排序（目录按name升序）  - time，按服务器修改时间排序  
   * @return by
  **/
  @Schema(description = "指定按哪个字段排序    若不指定，默认按docid升序排序    说明：  - name，按文件名称（中文按拼音）排序  - size，按大小排序（目录按name升序）  - time，按服务器修改时间排序  ")
  public String getBy() {
    return by;
  }

  public void setBy(String by) {
    this.by = by;
  }

  public DirListReq sort(String sort) {
    this.sort = sort;
    return this;
  }

   /**
   * 升序还是降序，默认为升序    说明：  - asc，升序  - desc，降序  
   * @return sort
  **/
  @Schema(description = "升序还是降序，默认为升序    说明：  - asc，升序  - desc，降序  ")
  public String getSort() {
    return sort;
  }

  public void setSort(String sort) {
    this.sort = sort;
  }

  public DirListReq attr(Boolean attr) {
    this.attr = attr;
    return this;
  }

   /**
   * 默认为false,即不取文件或者目录属性信息,    为true时,则取文件或者目录的属性信息  
   * @return attr
  **/
  @Schema(description = "默认为false,即不取文件或者目录属性信息,    为true时,则取文件或者目录的属性信息  ")
  public Boolean isAttr() {
    return attr;
  }

  public void setAttr(Boolean attr) {
    this.attr = attr;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirListReq dirListReq = (DirListReq) o;
    return Objects.equals(this.docid, dirListReq.docid) &&
        Objects.equals(this.by, dirListReq.by) &&
        Objects.equals(this.sort, dirListReq.sort) &&
        Objects.equals(this.attr, dirListReq.attr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docid, by, sort, attr);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirListReq {\n");
    
    sb.append("    docid: ").append(toIndentedString(docid)).append("\n");
    sb.append("    by: ").append(toIndentedString(by)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    attr: ").append(toIndentedString(attr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
