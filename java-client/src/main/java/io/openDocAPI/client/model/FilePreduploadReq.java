/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * FilePreduploadReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class FilePreduploadReq {
  @SerializedName("length")
  private Long length = null;

  @SerializedName("slice_md5")
  private String sliceMd5 = null;

  public FilePreduploadReq length(Long length) {
    this.length = length;
    return this;
  }

   /**
   * 整个文件的长度
   * @return length
  **/
  @Schema(required = true, description = "整个文件的长度")
  public Long getLength() {
    return length;
  }

  public void setLength(Long length) {
    this.length = length;
  }

  public FilePreduploadReq sliceMd5(String sliceMd5) {
    this.sliceMd5 = sliceMd5;
    return this;
  }

   /**
   * - 校验段校验码 - 如果文件大于200KB，slice_md5为文件的前200KB的MD5值 - 如果文件小于等于200KB，slice_md5为整个文件的MD5值 - 如果是空文件，slilce为空。
   * @return sliceMd5
  **/
  @Schema(required = true, description = "- 校验段校验码 - 如果文件大于200KB，slice_md5为文件的前200KB的MD5值 - 如果文件小于等于200KB，slice_md5为整个文件的MD5值 - 如果是空文件，slilce为空。")
  public String getSliceMd5() {
    return sliceMd5;
  }

  public void setSliceMd5(String sliceMd5) {
    this.sliceMd5 = sliceMd5;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilePreduploadReq filePreduploadReq = (FilePreduploadReq) o;
    return Objects.equals(this.length, filePreduploadReq.length) &&
        Objects.equals(this.sliceMd5, filePreduploadReq.sliceMd5);
  }

  @Override
  public int hashCode() {
    return Objects.hash(length, sliceMd5);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilePreduploadReq {\n");
    
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    sliceMd5: ").append(toIndentedString(sliceMd5)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
