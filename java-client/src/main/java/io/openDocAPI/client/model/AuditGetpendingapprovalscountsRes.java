/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AuditGetpendingapprovalscountsRes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class AuditGetpendingapprovalscountsRes {
  @SerializedName("counts")
  private Long counts = null;

  @SerializedName("csfauditcount")
  private Long csfauditcount = null;

  @SerializedName("docauditcount")
  private Long docauditcount = null;

  @SerializedName("pemcount")
  private Long pemcount = null;

  @SerializedName("shareauditcount")
  private Long shareauditcount = null;

  public AuditGetpendingapprovalscountsRes counts(Long counts) {
    this.counts = counts;
    return this;
  }

   /**
   * 待审核的记录总数
   * @return counts
  **/
  @Schema(required = true, description = "待审核的记录总数")
  public Long getCounts() {
    return counts;
  }

  public void setCounts(Long counts) {
    this.counts = counts;
  }

  public AuditGetpendingapprovalscountsRes csfauditcount(Long csfauditcount) {
    this.csfauditcount = csfauditcount;
    return this;
  }

   /**
   * 待审核的定密审核数
   * @return csfauditcount
  **/
  @Schema(required = true, description = "待审核的定密审核数")
  public Long getCsfauditcount() {
    return csfauditcount;
  }

  public void setCsfauditcount(Long csfauditcount) {
    this.csfauditcount = csfauditcount;
  }

  public AuditGetpendingapprovalscountsRes docauditcount(Long docauditcount) {
    this.docauditcount = docauditcount;
    return this;
  }

   /**
   * 待审核的流程审核数
   * @return docauditcount
  **/
  @Schema(required = true, description = "待审核的流程审核数")
  public Long getDocauditcount() {
    return docauditcount;
  }

  public void setDocauditcount(Long docauditcount) {
    this.docauditcount = docauditcount;
  }

  public AuditGetpendingapprovalscountsRes pemcount(Long pemcount) {
    this.pemcount = pemcount;
    return this;
  }

   /**
   * 待审核的共享审核数（包含定密审核）
   * @return pemcount
  **/
  @Schema(required = true, description = "待审核的共享审核数（包含定密审核）")
  public Long getPemcount() {
    return pemcount;
  }

  public void setPemcount(Long pemcount) {
    this.pemcount = pemcount;
  }

  public AuditGetpendingapprovalscountsRes shareauditcount(Long shareauditcount) {
    this.shareauditcount = shareauditcount;
    return this;
  }

   /**
   * 待审核的共享审核数（不包含定密审核）
   * @return shareauditcount
  **/
  @Schema(required = true, description = "待审核的共享审核数（不包含定密审核）")
  public Long getShareauditcount() {
    return shareauditcount;
  }

  public void setShareauditcount(Long shareauditcount) {
    this.shareauditcount = shareauditcount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditGetpendingapprovalscountsRes auditGetpendingapprovalscountsRes = (AuditGetpendingapprovalscountsRes) o;
    return Objects.equals(this.counts, auditGetpendingapprovalscountsRes.counts) &&
        Objects.equals(this.csfauditcount, auditGetpendingapprovalscountsRes.csfauditcount) &&
        Objects.equals(this.docauditcount, auditGetpendingapprovalscountsRes.docauditcount) &&
        Objects.equals(this.pemcount, auditGetpendingapprovalscountsRes.pemcount) &&
        Objects.equals(this.shareauditcount, auditGetpendingapprovalscountsRes.shareauditcount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(counts, csfauditcount, docauditcount, pemcount, shareauditcount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditGetpendingapprovalscountsRes {\n");
    
    sb.append("    counts: ").append(toIndentedString(counts)).append("\n");
    sb.append("    csfauditcount: ").append(toIndentedString(csfauditcount)).append("\n");
    sb.append("    docauditcount: ").append(toIndentedString(docauditcount)).append("\n");
    sb.append("    pemcount: ").append(toIndentedString(pemcount)).append("\n");
    sb.append("    shareauditcount: ").append(toIndentedString(shareauditcount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
