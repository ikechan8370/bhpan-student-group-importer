/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Auth1SelfregistrationReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class Auth1SelfregistrationReq {
  @SerializedName("registerid")
  private String registerid = null;

  @SerializedName("certid")
  private String certid = null;

  @SerializedName("realname")
  private String realname = null;

  @SerializedName("password")
  private String password = null;

  public Auth1SelfregistrationReq registerid(String registerid) {
    this.registerid = registerid;
    return this;
  }

   /**
   * 注册号
   * @return registerid
  **/
  @Schema(required = true, description = "注册号")
  public String getRegisterid() {
    return registerid;
  }

  public void setRegisterid(String registerid) {
    this.registerid = registerid;
  }

  public Auth1SelfregistrationReq certid(String certid) {
    this.certid = certid;
    return this;
  }

   /**
   * 身份证号
   * @return certid
  **/
  @Schema(required = true, description = "身份证号")
  public String getCertid() {
    return certid;
  }

  public void setCertid(String certid) {
    this.certid = certid;
  }

  public Auth1SelfregistrationReq realname(String realname) {
    this.realname = realname;
    return this;
  }

   /**
   * 真实姓名
   * @return realname
  **/
  @Schema(required = true, description = "真实姓名")
  public String getRealname() {
    return realname;
  }

  public void setRealname(String realname) {
    this.realname = realname;
  }

  public Auth1SelfregistrationReq password(String password) {
    this.password = password;
    return this;
  }

   /**
   * 用户密码（采用RSA加密并将加密结果使用base64编码）
   * @return password
  **/
  @Schema(required = true, description = "用户密码（采用RSA加密并将加密结果使用base64编码）")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Auth1SelfregistrationReq auth1SelfregistrationReq = (Auth1SelfregistrationReq) o;
    return Objects.equals(this.registerid, auth1SelfregistrationReq.registerid) &&
        Objects.equals(this.certid, auth1SelfregistrationReq.certid) &&
        Objects.equals(this.realname, auth1SelfregistrationReq.realname) &&
        Objects.equals(this.password, auth1SelfregistrationReq.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(registerid, certid, realname, password);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Auth1SelfregistrationReq {\n");
    
    sb.append("    registerid: ").append(toIndentedString(registerid)).append("\n");
    sb.append("    certid: ").append(toIndentedString(certid)).append("\n");
    sb.append("    realname: ").append(toIndentedString(realname)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
