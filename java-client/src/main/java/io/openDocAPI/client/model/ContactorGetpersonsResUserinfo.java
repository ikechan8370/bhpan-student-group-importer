/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ContactorGetpersonsResUserinfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class ContactorGetpersonsResUserinfo {
  @SerializedName("departname")
  private List<String> departname = new ArrayList<String>();

  @SerializedName("email")
  private String email = null;

  @SerializedName("userid")
  private String userid = null;

  @SerializedName("username")
  private String username = null;

  public ContactorGetpersonsResUserinfo departname(List<String> departname) {
    this.departname = departname;
    return this;
  }

  public ContactorGetpersonsResUserinfo addDepartnameItem(String departnameItem) {
    this.departname.add(departnameItem);
    return this;
  }

   /**
   * 联系人所属部门名称
   * @return departname
  **/
  @Schema(required = true, description = "联系人所属部门名称")
  public List<String> getDepartname() {
    return departname;
  }

  public void setDepartname(List<String> departname) {
    this.departname = departname;
  }

  public ContactorGetpersonsResUserinfo email(String email) {
    this.email = email;
    return this;
  }

   /**
   * 用户邮箱地址
   * @return email
  **/
  @Schema(required = true, description = "用户邮箱地址")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public ContactorGetpersonsResUserinfo userid(String userid) {
    this.userid = userid;
    return this;
  }

   /**
   * 用户唯一标识
   * @return userid
  **/
  @Schema(required = true, description = "用户唯一标识")
  public String getUserid() {
    return userid;
  }

  public void setUserid(String userid) {
    this.userid = userid;
  }

  public ContactorGetpersonsResUserinfo username(String username) {
    this.username = username;
    return this;
  }

   /**
   * 用户显示名
   * @return username
  **/
  @Schema(required = true, description = "用户显示名")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactorGetpersonsResUserinfo contactorGetpersonsResUserinfo = (ContactorGetpersonsResUserinfo) o;
    return Objects.equals(this.departname, contactorGetpersonsResUserinfo.departname) &&
        Objects.equals(this.email, contactorGetpersonsResUserinfo.email) &&
        Objects.equals(this.userid, contactorGetpersonsResUserinfo.userid) &&
        Objects.equals(this.username, contactorGetpersonsResUserinfo.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(departname, email, userid, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactorGetpersonsResUserinfo {\n");
    
    sb.append("    departname: ").append(toIndentedString(departname)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
