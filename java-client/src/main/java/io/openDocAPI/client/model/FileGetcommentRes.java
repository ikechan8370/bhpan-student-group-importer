/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.openDocAPI.client.model.FileGetcommentResComments;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * FileGetcommentRes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class FileGetcommentRes {
  @SerializedName("mode")
  private Long mode = null;

  @SerializedName("averagescore")
  private Double averagescore = null;

  @SerializedName("hasscored")
  private Boolean hasscored = null;

  @SerializedName("comments")
  private List<FileGetcommentResComments> comments = null;

  public FileGetcommentRes mode(Long mode) {
    this.mode = mode;
    return this;
  }

   /**
   * 评论模式  - 0:未启用评论和评分  - 1:只启用评论  - 2:只启用评分  - 3:同时启用评论和评分  
   * @return mode
  **/
  @Schema(required = true, description = "评论模式  - 0:未启用评论和评分  - 1:只启用评论  - 2:只启用评分  - 3:同时启用评论和评分  ")
  public Long getMode() {
    return mode;
  }

  public void setMode(Long mode) {
    this.mode = mode;
  }

  public FileGetcommentRes averagescore(Double averagescore) {
    this.averagescore = averagescore;
    return this;
  }

   /**
   * 总评分    mode 为 2 或 3 时，返回此项  
   * @return averagescore
  **/
  @Schema(description = "总评分    mode 为 2 或 3 时，返回此项  ")
  public Double getAveragescore() {
    return averagescore;
  }

  public void setAveragescore(Double averagescore) {
    this.averagescore = averagescore;
  }

  public FileGetcommentRes hasscored(Boolean hasscored) {
    this.hasscored = hasscored;
    return this;
  }

   /**
   * 用户是否已经评分    mode 为 2 或 3 时，返回此项  
   * @return hasscored
  **/
  @Schema(description = "用户是否已经评分    mode 为 2 或 3 时，返回此项  ")
  public Boolean isHasscored() {
    return hasscored;
  }

  public void setHasscored(Boolean hasscored) {
    this.hasscored = hasscored;
  }

  public FileGetcommentRes comments(List<FileGetcommentResComments> comments) {
    this.comments = comments;
    return this;
  }

  public FileGetcommentRes addCommentsItem(FileGetcommentResComments commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<FileGetcommentResComments>();
    }
    this.comments.add(commentsItem);
    return this;
  }

   /**
   * 评论内容的数组    mode 不为 0 时，返回此项  
   * @return comments
  **/
  @Schema(description = "评论内容的数组    mode 不为 0 时，返回此项  ")
  public List<FileGetcommentResComments> getComments() {
    return comments;
  }

  public void setComments(List<FileGetcommentResComments> comments) {
    this.comments = comments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileGetcommentRes fileGetcommentRes = (FileGetcommentRes) o;
    return Objects.equals(this.mode, fileGetcommentRes.mode) &&
        Objects.equals(this.averagescore, fileGetcommentRes.averagescore) &&
        Objects.equals(this.hasscored, fileGetcommentRes.hasscored) &&
        Objects.equals(this.comments, fileGetcommentRes.comments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, averagescore, hasscored, comments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileGetcommentRes {\n");
    
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    averagescore: ").append(toIndentedString(averagescore)).append("\n");
    sb.append("    hasscored: ").append(toIndentedString(hasscored)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
