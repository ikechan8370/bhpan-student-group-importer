/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Auth1GetoauthinfoRes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class Auth1GetoauthinfoRes {
  @SerializedName("isenabled")
  private Boolean isenabled = null;

  @SerializedName("authurl")
  private String authurl = null;

  @SerializedName("authserver")
  private String authserver = null;

  @SerializedName("redirectserver")
  private String redirectserver = null;

  public Auth1GetoauthinfoRes isenabled(Boolean isenabled) {
    this.isenabled = isenabled;
    return this;
  }

   /**
   * 是否开启
   * @return isenabled
  **/
  @Schema(required = true, description = "是否开启")
  public Boolean isIsenabled() {
    return isenabled;
  }

  public void setIsenabled(Boolean isenabled) {
    this.isenabled = isenabled;
  }

  public Auth1GetoauthinfoRes authurl(String authurl) {
    this.authurl = authurl;
    return this;
  }

   /**
   * 完整的OAuth认证地址
   * @return authurl
  **/
  @Schema(required = true, description = "完整的OAuth认证地址")
  public String getAuthurl() {
    return authurl;
  }

  public void setAuthurl(String authurl) {
    this.authurl = authurl;
  }

  public Auth1GetoauthinfoRes authserver(String authserver) {
    this.authserver = authserver;
    return this;
  }

   /**
   * 认证服务器地址
   * @return authserver
  **/
  @Schema(required = true, description = "认证服务器地址")
  public String getAuthserver() {
    return authserver;
  }

  public void setAuthserver(String authserver) {
    this.authserver = authserver;
  }

  public Auth1GetoauthinfoRes redirectserver(String redirectserver) {
    this.redirectserver = redirectserver;
    return this;
  }

   /**
   * 第三方认证完毕后，跳转到AnyShare服务器的地址
   * @return redirectserver
  **/
  @Schema(required = true, description = "第三方认证完毕后，跳转到AnyShare服务器的地址")
  public String getRedirectserver() {
    return redirectserver;
  }

  public void setRedirectserver(String redirectserver) {
    this.redirectserver = redirectserver;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Auth1GetoauthinfoRes auth1GetoauthinfoRes = (Auth1GetoauthinfoRes) o;
    return Objects.equals(this.isenabled, auth1GetoauthinfoRes.isenabled) &&
        Objects.equals(this.authurl, auth1GetoauthinfoRes.authurl) &&
        Objects.equals(this.authserver, auth1GetoauthinfoRes.authserver) &&
        Objects.equals(this.redirectserver, auth1GetoauthinfoRes.redirectserver);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isenabled, authurl, authserver, redirectserver);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Auth1GetoauthinfoRes {\n");
    
    sb.append("    isenabled: ").append(toIndentedString(isenabled)).append("\n");
    sb.append("    authurl: ").append(toIndentedString(authurl)).append("\n");
    sb.append("    authserver: ").append(toIndentedString(authserver)).append("\n");
    sb.append("    redirectserver: ").append(toIndentedString(redirectserver)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
