/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * FileSetappmetadataReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class FileSetappmetadataReq {
  @SerializedName("appid")
  private String appid = null;

  @SerializedName("appmetadata")
  private Map<String, String> appmetadata = new HashMap<String, String>();

  @SerializedName("docid")
  private String docid = null;

  public FileSetappmetadataReq appid(String appid) {
    this.appid = appid;
    return this;
  }

   /**
   * 应用 id，由控制台配置后分配
   * @return appid
  **/
  @Schema(required = true, description = "应用 id，由控制台配置后分配")
  public String getAppid() {
    return appid;
  }

  public void setAppid(String appid) {
    this.appid = appid;
  }

  public FileSetappmetadataReq appmetadata(Map<String, String> appmetadata) {
    this.appmetadata = appmetadata;
    return this;
  }

  public FileSetappmetadataReq putAppmetadataItem(String key, String appmetadataItem) {
    this.appmetadata.put(key, appmetadataItem);
    return this;
  }

   /**
   * - json 格式的应用元数据集合，key-value string 的形式 - appmetadata 中只允许 key-value string，对于 value 为 integer、boolen、array 等情况，要求把值转为 string。非 key-value string 的值会被忽略
   * @return appmetadata
  **/
  @Schema(required = true, description = "- json 格式的应用元数据集合，key-value string 的形式 - appmetadata 中只允许 key-value string，对于 value 为 integer、boolen、array 等情况，要求把值转为 string。非 key-value string 的值会被忽略")
  public Map<String, String> getAppmetadata() {
    return appmetadata;
  }

  public void setAppmetadata(Map<String, String> appmetadata) {
    this.appmetadata = appmetadata;
  }

  public FileSetappmetadataReq docid(String docid) {
    this.docid = docid;
    return this;
  }

   /**
   * 文件gns路径（列举协议返回）
   * @return docid
  **/
  @Schema(required = true, description = "文件gns路径（列举协议返回）")
  public String getDocid() {
    return docid;
  }

  public void setDocid(String docid) {
    this.docid = docid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileSetappmetadataReq fileSetappmetadataReq = (FileSetappmetadataReq) o;
    return Objects.equals(this.appid, fileSetappmetadataReq.appid) &&
        Objects.equals(this.appmetadata, fileSetappmetadataReq.appmetadata) &&
        Objects.equals(this.docid, fileSetappmetadataReq.docid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appid, appmetadata, docid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileSetappmetadataReq {\n");
    
    sb.append("    appid: ").append(toIndentedString(appid)).append("\n");
    sb.append("    appmetadata: ").append(toIndentedString(appmetadata)).append("\n");
    sb.append("    docid: ").append(toIndentedString(docid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
