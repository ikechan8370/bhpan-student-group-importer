/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * FileSendResResult
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class FileSendResResult {
  @SerializedName("causemsg")
  private String causemsg = null;

  @SerializedName("msg")
  private String msg = null;

  @SerializedName("recipient")
  private String recipient = null;

  @SerializedName("success")
  private Boolean success = null;

  public FileSendResResult causemsg(String causemsg) {
    this.causemsg = causemsg;
    return this;
  }

   /**
   * 发送成功时为空；否则为详细错误信息
   * @return causemsg
  **/
  @Schema(required = true, description = "发送成功时为空；否则为详细错误信息")
  public String getCausemsg() {
    return causemsg;
  }

  public void setCausemsg(String causemsg) {
    this.causemsg = causemsg;
  }

  public FileSendResResult msg(String msg) {
    this.msg = msg;
    return this;
  }

   /**
   * 发送成功时为空；否则为错误信息
   * @return msg
  **/
  @Schema(required = true, description = "发送成功时为空；否则为错误信息")
  public String getMsg() {
    return msg;
  }

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public FileSendResResult recipient(String recipient) {
    this.recipient = recipient;
    return this;
  }

   /**
   * 收件人名字
   * @return recipient
  **/
  @Schema(required = true, description = "收件人名字")
  public String getRecipient() {
    return recipient;
  }

  public void setRecipient(String recipient) {
    this.recipient = recipient;
  }

  public FileSendResResult success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * 发送是否成功
   * @return success
  **/
  @Schema(required = true, description = "发送是否成功")
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileSendResResult fileSendResResult = (FileSendResResult) o;
    return Objects.equals(this.causemsg, fileSendResResult.causemsg) &&
        Objects.equals(this.msg, fileSendResResult.msg) &&
        Objects.equals(this.recipient, fileSendResResult.recipient) &&
        Objects.equals(this.success, fileSendResResult.success);
  }

  @Override
  public int hashCode() {
    return Objects.hash(causemsg, msg, recipient, success);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileSendResResult {\n");
    
    sb.append("    causemsg: ").append(toIndentedString(causemsg)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
