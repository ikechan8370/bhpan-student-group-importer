/*
 * 6.0-OpenDoc_API-文档访问
 * API to access AnyShare    如有任何疑问，可到开发者社区提问：https://developers.aishu.cn  # Authentication  - 调用需要鉴权的API，必须将token放在HTTP header中：\"Authorization: Bearer ACCESS_TOKEN\"  - 对于GET请求，除了将token放在HTTP header中，也可以将token放在URL query string中：\"tokenid=ACCESS_TOKEN\"  
 *
 * OpenAPI spec version: 6.0.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openDocAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PkiAuthenReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-06-28T09:01:49.177Z[Etc/UTC]")
public class PkiAuthenReq {
  @SerializedName("original")
  private String original = null;

  @SerializedName("detach")
  private String detach = null;

  public PkiAuthenReq original(String original) {
    this.original = original;
    return this;
  }

   /**
   * 通过pki?method&#x3D;original获取的值
   * @return original
  **/
  @Schema(required = true, description = "通过pki?method=original获取的值")
  public String getOriginal() {
    return original;
  }

  public void setOriginal(String original) {
    this.original = original;
  }

  public PkiAuthenReq detach(String detach) {
    this.detach = detach;
    return this;
  }

   /**
   * 使用key与original计算后的值
   * @return detach
  **/
  @Schema(required = true, description = "使用key与original计算后的值")
  public String getDetach() {
    return detach;
  }

  public void setDetach(String detach) {
    this.detach = detach;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PkiAuthenReq pkiAuthenReq = (PkiAuthenReq) o;
    return Objects.equals(this.original, pkiAuthenReq.original) &&
        Objects.equals(this.detach, pkiAuthenReq.detach);
  }

  @Override
  public int hashCode() {
    return Objects.hash(original, detach);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PkiAuthenReq {\n");
    
    sb.append("    original: ").append(toIndentedString(original)).append("\n");
    sb.append("    detach: ").append(toIndentedString(detach)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
